# Text transform and spinner functions
text_transform(){
  BLUE="\033[0;34m"     # Blue
  BBLUE="\033[1;34m"    # Blue bold
  GREEN="\033[0;32m"    # Green
  BGREEN="\033[1;32m"   # Green bold

  BOLD="\033[1m"        # Bold
  NORMAL="\033[m"       # Normal

  color=\$${1:-NORMAL}

  echo -ne "$(eval echo ${color})"
  cat

  echo -ne "${NORMAL}"
}
spinner(){   # Usage: `$command & spinner $speed`
  pid=$!
  while kill -0 $pid 2>/dev/null
    do for c in / - \\ \|
      do printf "\r$c"
      sleep $1
    done
  done
}

# Copy script into root folder if not existing
if [ ! -f ~/.webpack-init ]; then
  echo "Copying script into root folder..." | text_transform BBLUE
  sleep 2 & spinner 0.1  | text_transform BBLUE

  cp ./.webpack-init ~
  echo "\r✔️  Script copied in $(printf ~ | text_transform BOLD)"
fi

# Set up alias and profiles
ALIAS="webpack:init"
ALIAS_COMMAND="alias $ALIAS"
COMMAND="zsh ~/.webpack-init"
PROFILES=(aliases bash_profile bashrc profile zshrc)

# Create alias in first available profile if not already present
for profile in $PROFILES; do
  PROFILE_PATH=$(printf ~/.$profile)

  if ! grep $ALIAS_COMMAND=\"$COMMAND\" $PROFILE_PATH >/dev/null; then
    echo "Creating alias..." | text_transform BBLUE
    sleep 2 & spinner 0.1 | text_transform BBLUE

    echo $ALIAS_COMMAND=\"$COMMAND\" >> $PROFILE_PATH
    echo "\r✔️  Alias added to $(printf $PROFILE_PATH | text_transform BOLD)"
    echo "Restart the terminal and launch a new project with $(printf $ALIAS | text_transform BGREEN)"

    exit    # Alias copied - exit and refresh terminal
  else
    break   # Alias already present - break and pass to next command
  fi
done

# Initialize new project
if [ ! $# -eq 0 ]; then                         # Is there an argument?
  PROJECT_NAME=$1                               # Yes - store as project name
else
  echo "Project name:" | text_transform BBLUE   # No - ask for project name
  read PROJECT_NAME
fi
mkdir "$PROJECT_NAME"
cd $PROJECT_NAME

# Install Yarn
echo "Initializing Yarn for ${PROJECT_NAME}..." | text_transform BBLUE
yarn init

# Add packages
echo "Adding packages..." | text_transform BBLUE
PACKAGES=(
  @babel/core
  @babel/preset-env
  babel-loader
  css-loader
  dotenv-webpack
  eslint
  eslint-config-airbnb-base
  eslint-plugin-import
  gh-pages
  html-webpack-plugin
  image-webpack-loader
  mini-css-extract-plugin
  node-sass
  optimize-css-assets-webpack-plugin
  sass-loader
  stylelint
  stylelint-config-recommended-scss
  stylelint-scss
  svg-url-loader
  uglifyjs-webpack-plugin
  url-loader
  webpack
  webpack-cli
  webpack-dev-server
)
SECONDS=0   # Reset script timer

yarn add --dev $PACKAGES &>/dev/null &
spinner 0.1 | text_transform BBLUE

PACKAGES_TIME=$SECONDS
echo "\r✨  Done in $PACKAGES_TIME.$(( $RANDOM % 98 + 1 ))s."

# Download assets from https://github.com/gabrielecanepa/webpack-boilerplate
echo "Downloading assets and config files..." | text_transform BBLUE
ASSETS=(
  images/favicon.png
  javascripts/index.js
  stylesheets/index.scss
  .babelrc
  .eslintrc.json
  .gitignore
  .stylelintrc
  index.html
  webpack.config.js
)
BASE_URL="https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master"
SECONDS=0

mkdir images javascripts stylesheets && touch .env && for asset in $ASSETS; do
  curl $BASE_URL/$asset > $asset &>/dev/null &
  spinner 0.1 | text_transform BBLUE
done

ASSETS_TIME=$SECONDS
echo "\r✨  Done in $ASSETS_TIME.$(( $RANDOM % 98 + 1 ))s."

printf "📦  ${PROJECT_NAME} is ready to use! " | text_transform BOLD
print "Launch the app with $(printf webpack-dev-server | text_transform BGREEN)"

# Exit from subshell and store directory change
exec zsh || exec bash
