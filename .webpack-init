# Text transform and spinner functions
text_transform(){
  BLUE="\033[0;34m"     # Blue
  BBLUE="\033[1;34m"    # Blue bold
  GREEN="\033[0;32m"    # Green
  BGREEN="\033[1;32m"   # Green bold

  BOLD="\033[1m"        # Bold
  NORMAL="\033[m"       # Normal

  color=\$${1:-NORMAL}

  echo -ne "$(eval echo ${color})"
  cat

  echo -ne "${NORMAL}"
}
spinner(){   # usage: `spinner $duration $speed`
  sleep $1 & job=$!
  while kill -0 $job 2>/dev/null
    do for s in / - \\ \|
      do printf "\r$s"
      sleep $2
    done
  done
}

# Copy script into root folder if not existing
if [ ! -f ~/.webpack-init ]; then
  echo "Copying script into root folder..." | text_transform BBLUE
  spinner 2 0.1  | text_transform BBLUE
  cp ./.webpack-init ~
  echo "\r✔️  Done!"
fi

# Set up alias and profiles
ALIAS="webpack:init"
ALIAS_COMMAND="alias $ALIAS"
COMMAND="zsh ~/.webpack-init"
PROFILES=(aliases bash_profile bashrc profile zshrc)

# Create alias in first available profile if not already present
for profile in $PROFILES; do
  PROFILE_PATH=$(printf ~/.$profile)

  if ! grep $ALIAS_COMMAND=\"$COMMAND\" $PROFILE_PATH >/dev/null; then
    echo "Creating alias..." | text_transform BBLUE
    spinner 2 0.1 | text_transform BBLUE

    echo $ALIAS_COMMAND=\"$COMMAND\" >> $PROFILE_PATH
    echo "\r✔️  Alias successfully added to $(printf $PROFILE_PATH | text_transform BOLD)!"
    echo "Restart the terminal and launch a new project with $(printf $ALIAS | text_transform BGREEN)"

    exit    # alias copied - exit and refresh terminal
  else
    break   # alias already present - break and pass to next command
  fi
done

# Initialize a new project
echo "Project name:" | text_transform BBLUE
read project_name
mkdir $project_name
cd $project_name

# Install Yarn
echo "Initializing Yarn for ${project_name}..." | text_transform BBLUE
yarn init

# Add packages
echo "Adding packages..." | text_transform BBLUE
yarn add --dev \
webpack webpack-cli webpack-dev-server \
@babel/core @babel/preset-env babel-loader \
eslint eslint-config-airbnb-base eslint-plugin-import \
css-loader mini-css-extract-plugin node-sass sass-loader \
stylelint stylelint-config-recommended-scss stylelint-scss

# Download assets from https://github.com/gabrielecanepa/webpack-boilerplate
echo "Downloading assets and config files..." | text_transform BBLUE
mkdir javascripts && touch javascripts/index.js
mkdir stylesheets && touch stylesheets/index.scss
mkdir images
curl https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master/images/favicon.png > images/favicon.png
curl https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master/.babelrc > .babelrc
curl https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master/.eslintrc.json > .eslintrc.json
curl https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master/.gitignore > .gitignore
curl https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master/.stylelintrc > .stylelintrc
curl https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master/index.html > index.html
curl https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master/webpack.config.js > webpack.config.js

echo "📦✨ ${project_name} is ready to use!" | text_transform BOLD
echo "Launch the app with $(printf webpack-dev-server | text_transform BGREEN)"

# Exit from subshell and store directory change
exec zsh || exec bash
