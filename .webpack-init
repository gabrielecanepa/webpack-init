# Text transform and spinner functions
text_transform(){
  BLUE="\033[0;34m"     # Blue
  BBLUE="\033[1;34m"    # Blue bold
  GREEN="\033[0;32m"    # Green
  BGREEN="\033[1;32m"   # Green bold

  BOLD="\033[1m"        # Bold
  NORMAL="\033[m"       # Normal

  color=\$${1:-NORMAL}

  echo -ne "$(eval echo ${color})"
  cat

  echo -ne "${NORMAL}"
}
spinner(){   # usage: `spinner $duration $speed`
  sleep $1 & job=$!
  while kill -0 $job 2>/dev/null
    do for s in / - \\ \|
      do printf "\r$s"
      sleep $2
    done
  done
}

# Copy script into root folder if not existing
if [ ! -f ~/.webpack-init ]; then
  echo "Copying script into root folder..." | text_transform BBLUE
  spinner 2 0.1  | text_transform BBLUE
  cp ./.webpack-init ~
  echo "\r✔️  Done!"
fi

# Set up alias and profiles
ALIAS="webpack:init"
ALIAS_COMMAND="alias $ALIAS"
COMMAND="zsh ~/.webpack-init"
PROFILES=(aliases bash_profile bashrc profile zshrc)

# Create alias in first available profile if not already present
for profile in $PROFILES; do
  PROFILE_PATH=$(printf ~/.$profile)

  if ! grep $ALIAS_COMMAND=\"$COMMAND\" $PROFILE_PATH >/dev/null; then
    echo "Creating alias..." | text_transform BBLUE
    spinner 2 0.1 | text_transform BBLUE

    echo $ALIAS_COMMAND=\"$COMMAND\" >> $PROFILE_PATH
    echo "\r✔️  Alias successfully added to $(printf $PROFILE_PATH | text_transform BOLD)!"
    echo "Restart the terminal and launch a new project with $(printf $ALIAS | text_transform BGREEN)"

    exit    # alias copied - exit and refresh terminal
  else
    break   # alias already present - break and pass to next command
  fi
done

# Initialize new project
PROJECT_NAME=$1
mkdir "$PROJECT_NAME"
cd $PROJECT_NAME

# Install Yarn
echo "Initializing Yarn for ${PROJECT_NAME}..." | text_transform BBLUE
yarn init

# Add packages
echo "Adding packages..." | text_transform BBLUE
PACKAGES=(
  @babel/core
  # @babel/preset-env
  # babel-loader
  # css-loader
  # eslint
  # eslint-config-airbnb-base
  # eslint-plugin-import
  # mini-css-extract-plugin
  # node-sass
  # sass-loader
  # stylelint
  # stylelint-config-recommended-scss
  # stylelint-scss
  # webpack
  # webpack-cli
  # webpack-dev-server
)
yarn add --dev $PACKAGES

# Download assets from https://github.com/gabrielecanepa/webpack-boilerplate
echo "Downloading assets and config files..." | text_transform BBLUE
ASSETS=(
  images/favicon.png
  javascripts/index.js
  stylesheets/index.scss
  .babelrc .eslintrc.json
  .gitignore
  .stylelintrc
  index.html
  webpack.config.js
)
BASE_URL="https://raw.githubusercontent.com/gabrielecanepa/webpack-boilerplate/master"

mkdir images javascripts stylesheets

# spinner 2 0.1 | text_transform BBLUE
for asset in $ASSETS; do
  spinner 0.1 0.1 | text_transform BBLUE

  curl $BASE_URL/$asset > $asset &>/dev/null
done

echo "\r✨  Done."
printf "📦  ${PROJECT_NAME} is ready to use! " | text_transform BOLD
print "Launch the app with $(printf webpack-dev-server | text_transform BGREEN)"

# Exit from subshell and store directory change
exec zsh || exec bash
